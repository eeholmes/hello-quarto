# Teach {.title-middle-ice background-image="images/horst_quarto_penguins_teach.png"}

::: notes
Over the last decade I have thoroughly loved teaching R Markdown.
It's amazing when students hit that Knit button, see their code and their prose come together -- you can often hear a "wow, that's so cool" in the classroom the first time that happens.
I've also loved that this is a tool that they can pick up easily on the first day of an intro course, and it grows with them as their statistical and computational expertise grows.
However, I have also struggled with students, and frankly, myself, when going from a single, simple document to all the various, more advanced output formats in the R Markdown ecosystem particularly for computationally heavy projects.
:::

## A slide for Holland

::: notes
Last semester I had an art history student working on a pretty quantitative, for that field, thesis.
She collected data on representation of artists from different genders and ethnicities in two foundational art history textbooks.
The same semester she learned Quarto, she was able to figure out with a bit of Googling and a bit of my help that she can write each of her thesis chapters as a Quarto document, bring them together with a yml file, and voila!
You have a thesis written in Quarto.
It is always so heartwarming to see your students push what you're teaching them and use them to solve their problems, it's especially heartening when this happens with a new thing you're teaching for the first time while the thing is still in active development!

Quarto has provided simple but effective solutions for so many of my problems as an instructor as well.
Instead of telling you about them, let me show you!
:::

##  {#demo-3 .centered data-menu-title="Demo 3" background-color="#000000"}

::: demo
-   Features that are useful for learning:
    -   yaml errors
    -   going from a handful of documents to book / thesis
    -   if teaching with rstudio, it comes with everything, and people can just get started
    -   visual editor -- Julie will say more
-   Features that are useful for teaching:
    -   chalkboard on slides
    -   multiplex: Slides / scroll for audience
    -   downlit / code-link
    -   quarto publish quartopub
-   Features that are useful for research: quarto journal
:::

## Quarto flattens the learning curve {.takeaway .center}

-   With Quarto simple quarto -\> more complicated is not hard
-   With Rmd -\> look at the power of what rmd did with a simple document, ecosystem flourishing creates lack of consistency, quarto is unifying -- rmd common thread but also lots of domain specific, lots of stuff to pick up in between, 10000ft view, distill in a common core
-   rmd a lot of pieces, quarto bringing things together, and featuring visual editor helps
-   really loved teaching rmd but quarto people are picking it up a lot more quickly
-   Anecdote: Art history student writing thesis in Quarto. One semester to thesis writing a much less steep learning curve.

::: notes
With features like a consistent citation syntax, more intentional control over when computations should run or rerun, and a single, minimal yaml that controls inputs, layouts, theming, etc. leveling up from a single document to a multi-document project is a lot more straightforward with Quarto.
While it's difficult to make these statements empirically for such a new system, I do have an story to share to support my statements.
:::

## Quarto can grow with learners in a profound way {.takeaway .center}

::: fragment
✔️ Document ➞ Thesis ➞ Book / Website
:::

::: fragment
✔️ Document ➞ Journal article
:::

::: fragment
❓ Quarto in RStudio in Stats ➞ Quarto in Jupyter\[hub?\]
in CS
:::

::: fragment
::: larger
☀️
:::
:::

::: notes
-->  ...
-->  ...
-->  But also across disciplines -- stats students using Jupyter in CS class can use Quarto too, maybe? 
-->  That sounds like a bright future to me! And a bright future includes things we can't even imagine yet.
So Julie -- will tell us a bit about reimagining with Quarto?
:::
